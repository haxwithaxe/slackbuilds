diff -rupN tilda.orig.d/src/eggaccelerators.c tilda.new.d/src/eggaccelerators.c
--- tilda.orig.d/src/eggaccelerators.c	2012-12-14 16:58:34.361598155 -0500
+++ tilda.new.d/src/eggaccelerators.c	2012-12-14 16:54:56.540603166 -0500
@@ -29,7 +29,6 @@ enum
   EGG_MODMAP_ENTRY_SHIFT   = 0,
   EGG_MODMAP_ENTRY_LOCK    = 1,
   EGG_MODMAP_ENTRY_CONTROL = 2,
-  EGG_MODMAP_ENTRY_MOD1    = 3,
   EGG_MODMAP_ENTRY_MOD2    = 4,
   EGG_MODMAP_ENTRY_MOD3    = 5,
   EGG_MODMAP_ENTRY_MOD4    = 6,
@@ -50,11 +49,7 @@ const EggModmap* egg_keymap_get_modmap (
 static inline gboolean
 is_alt (const gchar *string)
 {
-  return ((string[0] == '<') &&
-	  (string[1] == 'a' || string[1] == 'A') &&
-	  (string[2] == 'l' || string[2] == 'L') &&
-	  (string[3] == 't' || string[3] == 'T') &&
-	  (string[4] == '>'));
+  return 0;
 }
 
 static inline gboolean
@@ -259,7 +254,7 @@ egg_accelerator_parse_virtual (const gch
 	  else if (len >= 6 && is_modx (accelerator))
 	    {
 	      static const guint mod_vals[] = {
-		EGG_VIRTUAL_ALT_MASK, EGG_VIRTUAL_MOD2_MASK, EGG_VIRTUAL_MOD3_MASK,
+		EGG_VIRTUAL_MOD2_MASK, EGG_VIRTUAL_MOD3_MASK,
 		EGG_VIRTUAL_MOD4_MASK, EGG_VIRTUAL_MOD5_MASK
 	      };
 
@@ -274,34 +269,27 @@ egg_accelerator_parse_virtual (const gch
 	      len -= 5;
 	      mods |= EGG_VIRTUAL_CONTROL_MASK;
 	    }
-	  else if (len >= 5 && is_alt (accelerator))
-	    {
-	      accelerator += 5;
-	      len -= 5;
-	      mods |= EGG_VIRTUAL_ALT_MASK;
-	    }
-          else if (len >= 6 && is_meta (accelerator))
+        else if (len >= 6 && is_meta (accelerator))
 	    {
 	      accelerator += 6;
 	      len -= 6;
 	      mods |= EGG_VIRTUAL_META_MASK;
 	    }
-          else if (len >= 7 && is_hyper (accelerator))
+        else if (len >= 7 && is_hyper (accelerator))
 	    {
 	      accelerator += 7;
 	      len -= 7;
 	      mods |= EGG_VIRTUAL_HYPER_MASK;
 	    }
-          else if (len >= 7 && is_super (accelerator))
+        else if (len >= 7 && is_super (accelerator))
 	    {
 	      accelerator += 7;
 	      len -= 7;
 	      mods |= EGG_VIRTUAL_SUPER_MASK;
 	    }
-	  else
+		else
 	    {
-	      gchar last_ch;
-	      
+	      gchar last_ch;  
 	      last_ch = *accelerator;
 	      while (last_ch && last_ch != '>')
 		{
@@ -309,9 +297,9 @@ egg_accelerator_parse_virtual (const gch
 		  accelerator += 1;
 		  len -= 1;
 		}
-	    }
+		}
 	}
-      else
+    else
 	{
           keyval = gdk_keyval_from_name (accelerator);
           
@@ -352,7 +340,6 @@ egg_virtual_accelerator_name (guint
   static const gchar text_release[] = "<Release>";
   static const gchar text_shift[] = "<Shift>";
   static const gchar text_control[] = "<Control>";
-  static const gchar text_mod1[] = "<Alt>";
   static const gchar text_mod2[] = "<Mod2>";
   static const gchar text_mod3[] = "<Mod3>";
   static const gchar text_mod4[] = "<Mod4>";
@@ -377,8 +364,6 @@ egg_virtual_accelerator_name (guint
     l += sizeof (text_shift) - 1;
   if (accelerator_mods & EGG_VIRTUAL_CONTROL_MASK)
     l += sizeof (text_control) - 1;
-  if (accelerator_mods & EGG_VIRTUAL_ALT_MASK)
-    l += sizeof (text_mod1) - 1;
   if (accelerator_mods & EGG_VIRTUAL_MOD2_MASK)
     l += sizeof (text_mod2) - 1;
   if (accelerator_mods & EGG_VIRTUAL_MOD3_MASK)
@@ -414,11 +399,6 @@ egg_virtual_accelerator_name (guint
       strcpy (accelerator + l, text_control);
       l += sizeof (text_control) - 1;
     }
-  if (accelerator_mods & EGG_VIRTUAL_ALT_MASK)
-    {
-      strcpy (accelerator + l, text_mod1);
-      l += sizeof (text_mod1) - 1;
-    }
   if (accelerator_mods & EGG_VIRTUAL_MOD2_MASK)
     {
       strcpy (accelerator + l, text_mod2);
@@ -614,7 +594,6 @@ reload_modmap (GdkKeymap *keymap,
   modmap->mapping[EGG_MODMAP_ENTRY_SHIFT] |= EGG_VIRTUAL_SHIFT_MASK;
   modmap->mapping[EGG_MODMAP_ENTRY_CONTROL] |= EGG_VIRTUAL_CONTROL_MASK;
   modmap->mapping[EGG_MODMAP_ENTRY_LOCK] |= EGG_VIRTUAL_LOCK_MASK;
-  modmap->mapping[EGG_MODMAP_ENTRY_MOD1] |= EGG_VIRTUAL_ALT_MASK;
   modmap->mapping[EGG_MODMAP_ENTRY_MOD2] |= EGG_VIRTUAL_MOD2_MASK;
   modmap->mapping[EGG_MODMAP_ENTRY_MOD3] |= EGG_VIRTUAL_MOD3_MASK;
   modmap->mapping[EGG_MODMAP_ENTRY_MOD4] |= EGG_VIRTUAL_MOD4_MASK;
diff -rupN tilda.orig.d/src/eggaccelerators.h tilda.new.d/src/eggaccelerators.h
--- tilda.orig.d/src/eggaccelerators.h	2012-12-14 16:58:34.361598155 -0500
+++ tilda.new.d/src/eggaccelerators.h	2012-12-14 16:56:44.620600679 -0500
@@ -35,8 +35,6 @@ typedef enum
   EGG_VIRTUAL_LOCK_MASK	    = 1 << 1,
   EGG_VIRTUAL_CONTROL_MASK  = 1 << 2,
 
-  EGG_VIRTUAL_ALT_MASK      = 1 << 3, /* fixed as Mod1 */
-  
   EGG_VIRTUAL_MOD2_MASK	    = 1 << 4,
   EGG_VIRTUAL_MOD3_MASK	    = 1 << 5,
   EGG_VIRTUAL_MOD4_MASK	    = 1 << 6,
diff -rupN tilda.orig.d/src/key_converter.l tilda.new.d/src/key_converter.l
--- tilda.orig.d/src/key_converter.l	2012-12-14 16:58:34.366598155 -0500
+++ tilda.new.d/src/key_converter.l	2012-12-14 16:55:51.292601905 -0500
@@ -31,7 +31,6 @@ static char new_keystr[64] = "";
 
 CONTROL		([Cc][Oo][Nn][Tt][Rr][Oo][Ll]|[Cc][Nn][Tt][Rr][Ll]|[Cc][Tt][Rr][Ll]|[Cc][Tt][Ll])
 SHIFT		([Ss][Hh][Ii][Ff][Tt]|[Ss][Hh][Ff][Tt])
-ALT		([Aa][Ll][Tt])
 NONE		([Nn][Oo][Nn][Ee])
 SUPER		([Ss][Uu][Pp][Ee][Rr])
 WIN		([Ww][Ii][Nn]|[Ww][Ii][Nn][Dd][Oo][Ww][Ss])
@@ -52,11 +51,9 @@ SEP		\+
 
 {CONTROL}{SEP}		append_to_keystring ("<Control>");
 {SHIFT}{SEP}		append_to_keystring ("<Shift>");
-{ALT}{SEP}		append_to_keystring ("<Alt>");
 {NONE}
 {SUPER}			append_to_keystring ("<Super>");
 {WIN}			append_to_keystring ("<Super>");
-{MOD1}			append_to_keystring ("<Alt>");
 {MOD2}			append_to_keystring ("<Mod2>");
 {MOD3}			append_to_keystring ("<Mod3>");
 {MOD4}			append_to_keystring ("<Mod4>");
